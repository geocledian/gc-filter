"use strict";const gcFilterLocales={en:{options:{title:"Filter"},fields:{crop:"Crop",entity:"Entity",name:"Name",promotion:"Promotion",planting:"Planting date after",harvest:"Harvest date before",date_format_hint:"YYYY-MM-DD"},buttons:{applyFilter:{title:"Apply Filter"},removeFilter:{title:"Remove Filter"}}},de:{options:{title:"Filter"},fields:{crop:"Fruchtart",entity:"Entit√§t",name:"Name",promotion:"Demo",planting:"Pflanzdatum nach",harvest:"Erntedatum vor",date_format_hint:"JJJJ-MM-TT"},buttons:{applyFilter:{title:"Filter anwenden"},removeFilter:{title:"Filter entfernen"}}}};Vue.component("gc-filter",{props:{gcWidgetId:{type:String,default:"filter1",required:!0},gcApikey:{type:String,default:"39553fb7-7f6f-4945-9b84-a4c8745bdbec"},gcHost:{type:String,default:"geocledian.com"},gcProxy:{type:String,default:void 0},gcApiBaseUrl:{type:String,default:"/agknow/api/v4"},gcApiSecure:{type:Boolean,default:!0},gcLimit:{type:Number,default:250},gcOffset:{type:Number,default:0},gcLayout:{type:String,default:"vertical"},gcAvailableFields:{type:String,default:"crop,name,entity,planting,harvest,userdata,promotion"},gcAvailableOptions:{type:String,default:"widgetTitle"},gcWidgetCollapsed:{type:Boolean,default:!1},gcLanguage:{type:String,default:"en"}},template:'<div :id="this.gcWidgetId" class="is-inline gc-filter">\n\n                <p :class="[\'gc-options-title\', \'is-size-6\', gcWidgetCollapsed ? \'gc-is-tertiary\' : \'gc-is-primary\']" \n                  style="cursor: pointer; margin-bottom: 0.5em;"    \n                  v-on:click="toggleFilter" \n                  v-show="availableOptions.includes(\'widgetTitle\')">\n                    \x3c!--i class="fas fa-filter fa-sm"></i --\x3e {{ $t(\'options.title\') }}\n                    <i :class="[!gcWidgetCollapsed ? \'\': \'is-active\', \'fas\', \'fa-angle-down\', \'fa-sm\']"></i>\n                </p>\n\n                \x3c!-- filter container --\x3e\n                <div :class="[!gcWidgetCollapsed ? \'\': \'is-hidden\']" style="width: 100%;">\n                  <div :id="this.gcWidgetId + \'div\'" :class="layoutCSSMap[\'alignment\'][gcLayout]">\n                    <div class="gc-field" v-show="availableFields.includes(\'crop\')">\n                      <label class="label is-small gc-is-tertiary">{{$t(\'fields.crop\')}}</label>\n                      <div class="control">\n                        <input type="text" class="input is-small" :placeholder="$t(\'fields.crop\')" v-model="crop">\n                      </div>\n                    </div>\n                    <div class="gc-field" v-show="availableFields.includes(\'entity\')">\n                      <label class="label is-small gc-is-tertiary">{{$t(\'fields.entity\')}}</label>\n                      <div class="control">\n                        <input type="text" class="input is-small" :placeholder="$t(\'fields.entity\')" v-model="entity">\n                      </div>\n                    </div>\n                    <div class="gc-field" v-show="availableFields.includes(\'name\')">\n                      <label class="label is-small gc-is-tertiary">{{$t(\'fields.name\')}}</label>\n                      <div class="control">\n                        <input type="text" class="input is-small" :placeholder="$t(\'fields.name\')" v-model="name">\n                      </div>\n                    </div>\n                    <div class="gc-field" v-show="availableFields.includes(\'planting\')">\n                      <label class="label is-small gc-is-tertiary">{{$t(\'fields.planting\')}}</label>\n                      <div class="control">\n                        <input :id="\'inpstartdate_\' + gcWidgetId" type="text" class="input is-small" :placeholder="$t(\'fields.date_format_hint\')" v-model="planting">\n                      </div>\n                    </div>\n                    <div class="gc-field" v-show="availableFields.includes(\'harvest\')">\n                      <label class="label is-small gc-is-tertiary">{{$t(\'fields.harvest\')}}</label>\n                      <div class="control">\n                        <input :id="\'inpenddate_\' + gcWidgetId" type="text" class="input is-small" :placeholder="$t(\'fields.date_format_hint\')" v-model="harvest">\n                      </div>\n                    </div>\n                    <div class="gc-field" v-show="availableFields.includes(\'promotion\')">\n                      <label class="label is-small gc-is-tertiary">{{$t(\'fields.promotion\')}}</label>\n                      <div class="control">\n                        <input type="checkbox" class="content" v-model="promotion">\n                      </div>\n                    </div>\n                    <div class="gc-field">\n                      <div class="control" :style="gcLayout === \'vertical\' ? \'padding-bottom: 1.2em;\': \'margin-top: 1.2em;\'">\n                        <button :id="this.gcWidgetId + \'_btnApplyFilter\'" class="button is-small is-light gc-is-primary" v-on:click="applyFilter">\n                            <i class="fas fa-filter fa-sm"></i><span class="content">{{$t(\'buttons.applyFilter.title\')}}</span>\n                        </button>\n                        <button :id="this.gcWidgetId + \'_btnRemoveFilter\'" class="button is-small is-light gc-is-primary" v-on:click="removeFilter">\n                            <i class="fas fa-times-circle fa-sm"></i><span class="content">{{$t(\'buttons.removeFilter.title\')}}</span>\n                        </button>\n                      </div>\n                    </div>\n                  </div>  \n                </div> \x3c!-- filter container --\x3e              \n\n                \x3c!-- pagination --\x3e\n                \x3c!-- div class="field is-centered" style="padding-top: 10px;">\n                  <nav class="pagination is-small is-centered" role="navigation" aria-label="pagination">\n                    <button class="button pagination-previous is-light gc-is-primary" v-on:click="setParcelPageStart();" title="Start">\n                      <i class="fas fa-fast-backward"></i>\n                    </button>\n                    <button id="btnPagePrev" class="button pagination-previous is-light gc-is-primary" v-on:click="setParcelPageOffset(-pagingStep);" title="Previous 250">\n                      <i class="fas fa-step-backward"></i>\n                    </button>\n                    <button id="btnPageNext" class="button pagination-next is-light gc-is-primary" v-on:click="setParcelPageOffset(pagingStep);" title="Next 250">\n                      <i class="fas fa-step-forward"></i>\n                    </button>\n                    <button class="button pagination-next is-light gc-is-primary" v-on:click="setParcelPageEnd();" title="End">\n                      <i class="fas fa-fast-forward"></i>\n                    </button>\n                    <ul v-if="(total_parcel_count - offset) < pagingStep" id="parcel_paging" \n                        style="flex-wrap: nowrap !important; -ms-flex-wrap: nowrap !important" \n                        class="button pagination-list has-text-grey is-small">\n                      <li><span class="">{{offset}}&nbsp;</span></li>\n                      <li><span class=""> - </span></li>\n                      <li><span class="">&nbsp;{{total_parcel_count}}&nbsp;</span></li>\n                      <li><span class=""> of {{total_parcel_count}}</span></li>\n                    </ul>\n                    <ul v-else id="parcel_paging" \n                        style="flex-wrap: nowrap !important; -ms-flex-wrap: nowrap !important" \n                        class="button pagination-list has-text-grey is-small">\n                      <li><span class="">{{offset}}&nbsp;</span></li>\n                      <li><span class=""> - </span></li>\n                      <li><span class="">&nbsp;{{(offset + pagingStep)}}&nbsp;</span></li>\n                      <li><span class=""> of {{total_parcel_count}}</span></li>\n                    </ul>\n                </nav>\n              </div --\x3e  \x3c!-- pagination --\x3e\n\n            </div>\x3c!-- gcWidgetId --\x3e',data:function(){return console.debug("filter! - data()"),{parcels:[],total_parcel_count:0,promotion:void 0,limit:250,crop:"",entity:"",name:"",planting:"",harvest:"",currentParcel:void 0,selectedParcelId:-1,layoutCSSMap:{alignment:{vertical:"is-inline-block",horizontal:"is-flex"}},apiSecure:!0}},i18n:{locale:this.currentLanguage,messages:gcFilterLocales},created:function(){console.debug("gc-filter - created()"),this.changeLanguage()},mounted:function(){console.debug("filter! - mounted()"),this.startdateCalendar=new bulmaCalendar(document.getElementById("inpstartdate_"+this.gcWidgetId),{startDate:new Date,dateFormat:"yyyy-mm-dd",lang:this.gcLanguage,overlay:!1,closeOnOverlayClick:!0,closeOnSelect:!0,onSelect:function(e){var a=new Date(e.valueOf()+864e5);this.planting=a.toISOString().split("T")[0]}.bind(this)}),this.enddateCalendar=new bulmaCalendar(document.getElementById("inpenddate_"+this.gcWidgetId),{startDate:new Date,dateFormat:"yyyy-mm-dd",lang:this.gcLanguage,overlay:!1,closeOnOverlayClick:!0,closeOnSelect:!0,onSelect:function(e){var a=new Date(e.valueOf()+864e5);this.harvest=a.toISOString().split("T")[0]}.bind(this)})},computed:{apiKey:{get:function(){return this.gcApikey}},apiHost:{get:function(){return this.gcHost}},apiBaseUrl:{get:function(){return this.gcApiBaseUrl}},apiSecure:{get:function(){return this.gcApiSecure}},apiMajorVersion:{get(){return"/agknow/api/v3"===this.apiBaseUrl?3:"/agknow/api/v4"===this.apiBaseUrl?4:void 0}},filterString:{get:function(){let filterStr="&crop="+this.crop+"&entity="+this.entity+"&name="+this.name;return 3===this.apiMajorVersion&&this.promotion&&(filterStr+="&promotion="+JSON.parse(this.promotion)),4===this.apiMajorVersion&&(this.promotion&&(filterStr+="&extended="+JSON.parse(this.promotion),filterStr+="&promotion="+JSON.parse(this.promotion)),this.planting.length>0&&(filterStr+="&planting="+this.planting),this.harvest.length>0&&(filterStr+="&harvest="+this.harvest)),filterStr}},offset:{get:function(){return this.gcOffset},set:function(newValue){this.$root.$emit("offsetChange",newValue)}},availableFields:{get:function(){return this.gcAvailableFields.split(",")}},availableOptions:{get:function(){return this.gcAvailableOptions.split(",")}},currentLanguage:{get:function(){return this.gcLanguage}}},watch:{filterString:function(newValue,oldValue){console.debug("gc-filter - filterString")},currentLanguage(newValue,oldValue){this.changeLanguage()}},methods:{getApiUrl:function(endpoint){let protocol="http";return this.apiSecure&&(protocol+="s"),this.gcProxy?protocol+"://"+this.gcProxy+this.apiBaseUrl+endpoint:protocol+"://"+this.gcHost+this.apiBaseUrl+endpoint+"?key="+this.apiKey},getParcelTotalCount:function(filterString){const endpoint="/parcels";let params;params=filterString?filterString+"&count=True":"&count=True";let xmlHttp=new XMLHttpRequest,async=!0;console.debug("getParcelTotalCount()"),console.debug("GET "+this.getApiUrl(endpoint)+params),xmlHttp.onreadystatechange=function(){if(4==xmlHttp.readyState){var tmp=JSON.parse(xmlHttp.responseText);if("count"in tmp){if(this.total_parcel_count=tmp.count,this.total_parcel_count<this.pagingStep?this.pagingStep=this.total_parcel_count:this.pagingStep=250,0==this.total_parcel_count)return;this.getAllParcels(this.offset,filterString)}}}.bind(this),xmlHttp.open("GET",this.getApiUrl(endpoint)+params,!0),xmlHttp.send()},getAllParcels:function(offset,filterString){let limit;const endpoint="/parcels";let params="&limit="+this.limit;offset&&(params=params+"&offset="+offset),filterString&&(params+=filterString);let xmlHttp=new XMLHttpRequest,async=!0;console.debug("getAllParcels()"),console.debug("GET "+this.getApiUrl(endpoint)+params),xmlHttp.onreadystatechange=function(){if(4==xmlHttp.readyState){var tmp=JSON.parse(xmlHttp.responseText);if("key is not authorized"==tmp.content)return;if(this.parcels=[],0==tmp.content.length)return;for(var i=0;i<tmp.content.length;i++){var item=tmp.content[i];this.parcels.push(item)}}}.bind(this),xmlHttp.open("GET",this.getApiUrl(endpoint)+params,!0),xmlHttp.send()},toggleFilter:function(){this.gcWidgetCollapsed=!this.gcWidgetCollapsed},applyFilter:function(){console.debug("applyFilter()"),document.getElementById(this.gcWidgetId+"_btnApplyFilter").classList.add("is-active"),this.$root.$emit("filterStringChange",this.filterString)},removeFilter:function(){this.crop="",this.entity="",this.name="",this.promotion=void 0,this.planting="",this.harvest="",this.offset=0,this.pagingStep=this.limit,this.applyFilter(),document.getElementById(this.gcWidgetId+"_btnApplyFilter").classList.remove("is-active")},setParcelPageOffset:function(offset){console.debug("setParcelPageOffset() - change: "+offset),console.debug("setParcelPageOffset() - current val: "+this.offset);let newOffset=this.offset+offset;newOffset>=0?(console.debug("new offset: "+newOffset),newOffset<=this.total_parcel_count?(console.debug("setting offset"),this.offset+=offset):(console.debug("total_parcel_count reached!"),console.debug("total: "+this.total_parcel_count),console.debug("offset: "+this.offset))):(console.debug("Min_offset reached!"),this.offset=0,console.debug(this.offset))},formatDecimal:function(decimal,numberOfDecimals){var factor=100;return isNaN(parseFloat(decimal))?NaN:(1==numberOfDecimals&&(factor=10),2==numberOfDecimals&&(factor=100),3==numberOfDecimals&&(factor=1e3),4==numberOfDecimals&&(factor=1e4),5==numberOfDecimals&&(factor=1e5),Math.ceil(decimal*factor)/factor)},changeLanguage(){this.$i18n.locale=this.currentLanguage}}});