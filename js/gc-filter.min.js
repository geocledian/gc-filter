"use strict";const gcFilterLocales={en:{options:{title:"Filter"},fields:{crop:"Crop",entity:"Entity",name:"Name",promotion:"Promotion"},buttons:{applyFilter:{title:"Apply Filter"},removeFilter:{title:"Remove Filter"}}},de:{options:{title:"Filter"},fields:{crop:"Fruchtart",entity:"Entit√§t",name:"Name",promotion:"Demo"},buttons:{applyFilter:{title:"Filter anwenden"},removeFilter:{title:"Filter entfernen"}}}};Vue.component("gc-filter",{props:{gcWidgetId:{type:String,default:"filter1",required:!0},gcApikey:{type:String,default:"39553fb7-7f6f-4945-9b84-a4c8745bdbec"},gcHost:{type:String,default:"geocledian.com"},gcProxy:{type:String,default:void 0},gcApiBaseUrl:{type:String,default:"/agknow/api/v3"},gcApiSecure:{type:Boolean,default:!0},gcLimit:{type:Number,default:250},gcOffset:{type:Number,default:0},gcLayout:{type:String,default:"vertical"},gcAvailableFields:{type:String,default:"crop,name,entity,promotion"},gcAvailableOptions:{type:String,default:"widgetTitle"},gcWidgetCollapsed:{type:Boolean,default:!0},gcLanguage:{type:String,default:"en"}},template:'<div :id="this.gcWidgetId" class="is-inline gc-filter">\n\n                <p class="gc-options-title is-size-6 is-inline-block is-orange" \n                  style="cursor: pointer; margin-bottom: 1em;"    \n                  v-on:click="toggleFilter" \n                  v-show="availableOptions.includes(\'widgetTitle\')">\n                    \x3c!--i class="fas fa-filter fa-sm"></i --\x3e {{ $t(\'options.title\') }}\n                    <i :class="[gcWidgetCollapsed ? \'\': \'is-active\', \'fas\', \'fa-angle-down\', \'fa-sm\']"></i>\n                </p>\n\n                \x3c!-- filter container --\x3e\n                <div :class="[gcWidgetCollapsed ? \'\': \'is-hidden\']" style="width: 100%;">\n                  <div :id="this.gcWidgetId + \'div\'" :class="layoutCSSMap[\'alignment\'][gcLayout]">\n                    <div class="gc-filter-field" v-show="availableFields.includes(\'crop\')">\n                      <label class="label is-small is-grey">{{$t(\'fields.crop\')}}</label>\n                      <div class="control">\n                        <input type="text" class="input is-small" :placeholder="$t(\'fields.crop\')" v-model="crop">\n                      </div>\n                    </div>\n                    <div class="gc-filter-field" v-show="availableFields.includes(\'entity\')">\n                      <label class="label is-small is-grey">{{$t(\'fields.entity\')}}</label>\n                      <div class="control">\n                        <input type="text" class="input is-small" :placeholder="$t(\'fields.entity\')" v-model="entity">\n                      </div>\n                    </div>\n                    <div class="gc-filter-field" v-show="availableFields.includes(\'name\')">\n                      <label class="label is-small is-grey">{{$t(\'fields.name\')}}</label>\n                      <div class="control">\n                        <input type="text" class="input is-small" :placeholder="$t(\'fields.name\')" v-model="name">\n                      </div>\n                    </div>\n                    <div class="gc-filter-field" v-show="availableFields.includes(\'promotion\')">\n                      <label class="label is-small is-grey">{{$t(\'fields.promotion\')}}</label>\n                      <div class="control">\n                        <input type="checkbox" class="content" v-model="promotion">\n                      </div>\n                    </div>\n                    <div class="gc-filter-field">\n                      <div class="control" :style="gcLayout === \'vertical\' ? \'padding-bottom: 1.2em;\': \'margin-top: 1.2em;\'">\n                        <button :id="this.gcWidgetId + \'_btnApplyFilter\'" class="button is-small is-light is-orange" v-on:click="applyFilter">\n                            <i class="fas fa-filter fa-sm"></i><span class="content">{{$t(\'buttons.applyFilter.title\')}}</span>\n                        </button>\n                        <button :id="this.gcWidgetId + \'_btnRemoveFilter\'" class="button is-small is-light is-orange" v-on:click="removeFilter">\n                            <i class="fas fa-times-circle fa-sm"></i><span class="content">{{$t(\'buttons.removeFilter.title\')}}</span>\n                        </button>\n                      </div>\n                    </div>\n                  </div>  \n                </div> \x3c!-- filter container --\x3e              \n\n                \x3c!-- pagination --\x3e\n                \x3c!-- div class="field is-centered" style="padding-top: 10px;">\n                  <nav class="pagination is-small is-centered" role="navigation" aria-label="pagination">\n                    <button class="button pagination-previous is-light is-orange" v-on:click="setParcelPageStart();" title="Start">\n                      <i class="fas fa-fast-backward"></i>\n                    </button>\n                    <button id="btnPagePrev" class="button pagination-previous is-light is-orange" v-on:click="setParcelPageOffset(-pagingStep);" title="Previous 250">\n                      <i class="fas fa-step-backward"></i>\n                    </button>\n                    <button id="btnPageNext" class="button pagination-next is-light is-orange" v-on:click="setParcelPageOffset(pagingStep);" title="Next 250">\n                      <i class="fas fa-step-forward"></i>\n                    </button>\n                    <button class="button pagination-next is-light is-orange" v-on:click="setParcelPageEnd();" title="End">\n                      <i class="fas fa-fast-forward"></i>\n                    </button>\n                    <ul v-if="(total_parcel_count - offset) < pagingStep" id="parcel_paging" \n                        style="flex-wrap: nowrap !important; -ms-flex-wrap: nowrap !important" \n                        class="button pagination-list has-text-grey is-small">\n                      <li><span class="">{{offset}}&nbsp;</span></li>\n                      <li><span class=""> - </span></li>\n                      <li><span class="">&nbsp;{{total_parcel_count}}&nbsp;</span></li>\n                      <li><span class=""> of {{total_parcel_count}}</span></li>\n                    </ul>\n                    <ul v-else id="parcel_paging" \n                        style="flex-wrap: nowrap !important; -ms-flex-wrap: nowrap !important" \n                        class="button pagination-list has-text-grey is-small">\n                      <li><span class="">{{offset}}&nbsp;</span></li>\n                      <li><span class=""> - </span></li>\n                      <li><span class="">&nbsp;{{(offset + pagingStep)}}&nbsp;</span></li>\n                      <li><span class=""> of {{total_parcel_count}}</span></li>\n                    </ul>\n                </nav>\n              </div --\x3e  \x3c!-- pagination --\x3e\n\n            </div>\x3c!-- gcWidgetId --\x3e',data:function(){return console.debug("filter! - data()"),{parcels:[],total_parcel_count:0,pagingStep:250,promotion:void 0,crop:"",entity:"",name:"",currentParcel:void 0,selectedParcelId:-1,layoutCSSMap:{alignment:{vertical:"is-inline-block",horizontal:"is-flex"}},apiSecure:!0}},i18n:{locale:this.currentLanguage,messages:gcFilterLocales},created:function(){console.debug("gc-filter - created()"),this.changeLanguage()},mounted:function(){console.debug("filter! - mounted()")},computed:{apiKey:{get:function(){return this.gcApikey}},apiHost:{get:function(){return this.gcHost}},apiBaseUrl:{get:function(){return this.gcApiBaseUrl}},apiSecure:{get:function(){return this.gcApiSecure}},filterString:{get:function(){let t="&crop="+this.crop+"&entity="+this.entity+"&name="+this.name;return this.promotion&&(t+="&promotion="+JSON.parse(this.promotion)),t}},parcelIds:{get:function(){return this.parcels.length>0?this.parcels.map(t=>t.parcel_id):[]}},limit:{get:function(){return this.gcLimit},set:function(t){this.$root.$emit("limitChange",t)}},offset:{get:function(){return this.gcOffset},set:function(t){this.$root.$emit("offsetChange",t)}},availableFields:{get:function(){return this.gcAvailableFields.split(",")}},availableOptions:{get:function(){return this.gcAvailableOptions.split(",")}},currentLanguage:{get:function(){return this.gcLanguage}}},watch:{parcelIds:function(t,e){},parcels:function(t,e){console.debug("parcels changed!"),this.$root.$emit("parcelsChange",t),this.currentParcel=this.parcels[0]},filterString:function(t,e){console.debug("filterString changed!")},offset:function(t,e){console.debug("event - offsetChange"),this.$root.$emit("offsetChange",this.offset),this.applyFilter()},selectedParcelId:function(t,e){this.$root.$emit("selectedParcelIdChange",t)},currentLanguage(t,e){this.changeLanguage()}},methods:{getApiUrl:function(t){let e="http";return this.apiSecure&&(e+="s"),this.gcProxy?e+"://"+this.gcProxy+this.apiBaseUrl+t:e+"://"+this.gcHost+this.apiBaseUrl+t+"?key="+this.apiKey},getParcelTotalCount:function(t){let e;e=t?t+"&count=True":"&count=True",console.debug("getParcelTotalCount()"),console.debug("GET "+this.getApiUrl("/parcels")+e),axios({method:"GET",url:this.getApiUrl("/parcels")+e}).then(function(e){if(200===e.status){var i=e.data;if("count"in i){if(this.total_parcel_count=i.count,this.total_parcel_count<this.pagingStep&&(this.pagingStep=this.total_parcel_count),0==this.total_parcel_count)return;this.getAllParcels(this.offset,t)}}}.bind(this)).catch(t=>{console.log("err= "+t)})},getAllParcels:function(t,e){let i="&limit="+this.pagingStep;t&&(i=i+"&offset="+t),e&&(i+=e),axios({method:"GET",url:this.getApiUrl("/parcels")+i}).then(function(t){if(200===t.status){var e=t.data;if("key is not authorized"==e.content)return;if(this.parcels=[],0==e.content.length)return;for(var i=0;i<e.content.length;i++){var n=e.content[i];this.parcels.push(n)}}}.bind(this)).catch(t=>{console.log("err= "+t)})},toggleFilter:function(){this.gcWidgetCollapsed=!this.gcWidgetCollapsed},applyFilter:function(){console.debug("applyFilter()"),document.getElementById(this.gcWidgetId+"_btnApplyFilter").classList.add("is-active"),this.getParcelTotalCount(this.filterString),this.$root.$emit("filterStringChange",this.filterString)},removeFilter:function(){this.crop="",this.entity="",this.name="",this.promotion=void 0,this.pagingStep=250,this.applyFilter(),document.getElementById(this.gcWidgetId+"_btnApplyFilter").classList.remove("is-active")},setParcelPageOffset:function(t){console.debug("setParcelPageOffset() - change: "+t),console.debug("setParcelPageOffset() - current val: "+this.offset);let e=this.offset+t;e>=0?(console.debug("new offset: "+e),e<=this.total_parcel_count?(console.debug("setting offset"),this.offset+=t):(console.debug("total_parcel_count reached!"),console.debug("total: "+this.total_parcel_count),console.debug("offset: "+this.offset))):(console.debug("Min_offset reached!"),this.offset=0,console.debug(this.offset))},formatDecimal:function(t,e){var i=100;return isNaN(parseFloat(t))?NaN:(1==e&&(i=10),2==e&&(i=100),3==e&&(i=1e3),4==e&&(i=1e4),5==e&&(i=1e5),Math.ceil(t*i)/i)},changeLanguage(){this.$i18n.locale=this.currentLanguage}}});